// Generated by CoffeeScript 1.6.1
var Emitter, Region,
  _this = this,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __slice = [].slice;

Emitter = require('emitter');

Region = (function(_super) {

  __extends(Region, _super);

  function Region() {
    var _this = this;
    this.clear = function() {
      return Region.prototype.clear.apply(_this, arguments);
    };
    this.set = function(nu) {
      return Region.prototype.set.apply(_this, arguments);
    };
    this.show = function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return Region.prototype.show.apply(_this, arguments);
    };
    return Region.__super__.constructor.apply(this, arguments);
  }

  Region.prototype.view = null;

  Region.prototype.$el = null;

  Region.prototype.show = function() {
    var a, _ref;
    a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    if (this.view) {
      this.clear();
      this.view.setElement(this.view.el);
      this.$el.html((_ref = this.view).render.apply(_ref, a).el);
      this.emit("show");
    }
    return this;
  };

  Region.prototype.set = function(nu) {
    this.view = nu;
    this.emit("change", nu);
    return this;
  };

  Region.prototype.clear = function() {
    if (this.view) {
      this.view.remove();
      this.emit("clear");
    }
    return this;
  };

  return Region;

})(Emitter);

module.exports = Region;
